version: '3.8'

services:
  database:
    container_name: ambev_developer_evaluation_database
    image: postgres:13
    environment:
      POSTGRES_DB: developerevaluation
      POSTGRES_USER: developer
      POSTGRES_PASSWORD: ev@luAt10n
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "developer", "-d", "developerevaluation"]
      interval: 5s
      timeout: 5s
      retries: 5

  nosql:
    container_name: ambev_developer_evaluation_nosql
    image: mongo:7.0
    environment:
      MONGO_INITDB_ROOT_USERNAME: developer
      MONGO_INITDB_ROOT_PASSWORD: ev@luAt10n
    ports:
      - "27017:27017"
    restart: unless-stopped
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  cache:
    container_name: ambev_developer_evaluation_cache
    image: redis:7.4.1-alpine
    command: redis-server --requirepass ev@luAt10n
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "ev@luAt10n", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  webapi:
    container_name: ambev_developer_evaluation_webapi
    image: ambevdeveloperevaluationwebapi
    build:
      context: .
      dockerfile: src/Ambev.DeveloperEvaluation.WebApi/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      - database
      - nosql
      - cache
    restart: unless-stopped

volumes:
  db-data:
    driver: local
